<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>panyang&#39;s home</title>
  
  <subtitle>panyang&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://panyang.online/"/>
  <updated>2019-11-04T11:06:27.643Z</updated>
  <id>https://panyang.online/</id>
  
  <author>
    <name>pan yang （潘羊）</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>centos7 将普通用户加入sudoers中，获取sudo执行权限</title>
    <link href="https://panyang.online/post/cc1b02ec.html"/>
    <id>https://panyang.online/post/cc1b02ec.html</id>
    <published>2019-11-04T11:03:53.000Z</published>
    <updated>2019-11-04T11:06:27.643Z</updated>
    
    <content type="html"><![CDATA[<h1 id="centos7-x-将普通用户加入sudoers中，获取sudo执行权限"><a href="#centos7-x-将普通用户加入sudoers中，获取sudo执行权限" class="headerlink" title="centos7.x 将普通用户加入sudoers中，获取sudo执行权限"></a>centos7.x 将普通用户加入sudoers中，获取sudo执行权限</h1><h2 id="0-问题由来"><a href="#0-问题由来" class="headerlink" title="0 问题由来"></a>0 问题由来</h2><p>&emsp;&emsp;你在提起兴致学习的时候，兴冲冲地往黑洞洞的文本窗口输入下一行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[pan@localhost ~]$ sudo ls</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;按照系统验证需求，你输入用户密码，结果返回的是冰冷的一串错误信息：</p><blockquote><p>pan is not in the sudoers file. This incident will be reported.  </p></blockquote><h2 id="1-定位sudoers文件"><a href="#1-定位sudoers文件" class="headerlink" title="1 定位sudoers文件"></a>1 定位sudoers文件</h2><p>&emsp;&emsp;按照错误信息的提示，我们获知由于用户“pan”不在sudoers文件中，导致了该命令行执行失败。<br>&emsp;&emsp;很自然地，我们要定位一下这个文件在哪里，使用这个命令可以达到这个目的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[pan@localhost ~]$ whereis sudoers</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;系统返回我们想要的结果：/etc/sudoers  </p><blockquote><p>sudoers:&emsp; /etc/sudoers.d&emsp; /etc/sudoers&emsp; /usr/share/man/man5/&emsp;sudoers.5.gz  </p></blockquote><h2 id="2-将普通用户添加进sudoers文件"><a href="#2-将普通用户添加进sudoers文件" class="headerlink" title="2 将普通用户添加进sudoers文件"></a>2 将普通用户添加进sudoers文件</h2><p>&emsp;&emsp;既然找到了目标文件，我们的目的——往sudoers文件中添加用户“pan”，就完成了一半。那剩下的一半怎么做，我们不禁会问。我需要看看sudoers文档里的内容，也许文档注释里就告诉了如何按照要求添加一个用户。<br>&emsp;&emsp;尝试查看 /etc/sudoers 里的内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[pan@localhost ~]$ ls -l /etc/sudoers &amp;&amp; cat /etc/sudoers</span><br></pre></td></tr></table></figure></p><p>&emsp;&emsp;返回的是一串错误信息：</p><blockquote><p>-r–r—–. 1 root root 3938 4月  11 2018 /etc/sudoers<br>cat:&emsp; /etc/sudoers:&emsp; Permission denied  </p></blockquote><p>&emsp;&emsp;从返回信息中可以获知，该文件属主root拥有读权限，属组root拥有读权限，只有上述用户才可以查看文件 /etc/sudoers 的内容。<br>&emsp;&emsp;切换到root用户完成查看文件 /etc/sudoers 的内容并添加用户“pan”进sudoers文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[pan@localhost ~]$ su - root</span><br><span class="line">```  </span><br><span class="line">&amp;emsp;&amp;emsp;查看 /etc/sudoers 里的内容：</span><br></pre></td></tr></table></figure></p><p>[root@localhost ~]# vim /etc/sudoers<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;emsp;&amp;emsp;我们重点查看这一段内容：  </span><br><span class="line">&gt; \#\# Allow root to run any commands anywhere  </span><br><span class="line">root&amp;emsp;    ALL=(ALL)&amp;emsp;       ALL  </span><br><span class="line"></span><br><span class="line">&amp;emsp;&amp;emsp;既然用户root是这样写入sudoers文件，很自然我们想到把用户root替换成用户“pan”：</span><br></pre></td></tr></table></figure></p><p>[root@localhost ~]# echo “pan    ALL=(ALL)       ALL” &gt;&gt; /etc/sudoers<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## 3 验证  </span><br><span class="line">&amp;emsp;&amp;emsp;切换回用户“pan”并验证sudo的执行权限：</span><br></pre></td></tr></table></figure></p><p>[pan@localhost ~]$ sudo ls<br><code>`</code>  </p><h2 id="4-结语"><a href="#4-结语" class="headerlink" title="4 结语"></a>4 结语</h2><p>&emsp;&emsp;这是一个很小的问题，本来是不值得一记的，但我生性太懒惰了，学东西时兴冲冲的，学了一段时间后就弃置迤逦、不管不顾了。写下来，就是为了磨性子。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;centos7-x-将普通用户加入sudoers中，获取sudo执行权限&quot;&gt;&lt;a href=&quot;#centos7-x-将普通用户加入sudoers中，获取sudo执行权限&quot; class=&quot;headerlink&quot; title=&quot;centos7.x 将普通用户加入sud
      
    
    </summary>
    
      <category term="学习" scheme="https://panyang.online/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Linux" scheme="https://panyang.online/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://panyang.online/tags/CentOS/"/>
    
      <category term="sudo" scheme="https://panyang.online/tags/sudo/"/>
    
      <category term="权限" scheme="https://panyang.online/tags/%E6%9D%83%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下手动挂载NTFS格式的U盘</title>
    <link href="https://panyang.online/post/3c503eab.html"/>
    <id>https://panyang.online/post/3c503eab.html</id>
    <published>2019-04-11T13:52:12.000Z</published>
    <updated>2019-04-17T01:10:29.516Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu下手动挂载NTFS格式的U盘"><a href="#Ubuntu下手动挂载NTFS格式的U盘" class="headerlink" title="Ubuntu下手动挂载NTFS格式的U盘"></a>Ubuntu下手动挂载NTFS格式的U盘</h1><p>我们都知道，在Linux下使用U盘、硬盘等移动设备时，需要手动挂载这些设备。现在的很多Linux桌面发行版本，如我使用的Ubuntu 18在检测到有移动设备插入时，将会自动完成挂载该设备。但凡事都会有意外，今天我插入的U盘居然有莫名的错误（我猜测可能是未正确卸载导致的），这时候我可怜的Ubuntu兄弟就没能自动挂载了。</p><p>有需求就要学习新知识，这不我赶紧趁着这样的机会学习下，手动挂载移动设备。</p><p>我们先来理一下，达成目标的学习思路：</p><p>1.查看插入U盘在系统下分配的设备名称</p><p>2.查看该U盘的文件存储格式</p><p>3.修复U盘上莫名的错误</p><p>4.创建挂载点并完成手动挂载</p><p>5.卸载设备</p><a id="more"></a><h2 id="1-查看插入U盘在系统下分配的设备名称"><a href="#1-查看插入U盘在系统下分配的设备名称" class="headerlink" title="1.查看插入U盘在系统下分配的设备名称"></a>1.查看插入U盘在系统下分配的设备名称</h2><p>我们将学会使用下面这个shell命令来比对出，插入U盘后比插入U盘前多出来的设备名称。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat /proc/partitions</span><br></pre></td></tr></table></figure><p>通过以下截图我们比对出系统给U盘分配出来的设备名称：</p><img src="/post/3c503eab/unexist_sdb.png" title="未插入U盘前的设备名称详情"><img src="/post/3c503eab/exist_sdb.png" title="插入U盘后的设备名称详情"><p>由此可知，我们插入的U盘设备名称叫做 /dev/sdb1 。</p><h2 id="2-查看该U盘的文件系统格式"><a href="#2-查看该U盘的文件系统格式" class="headerlink" title="2.查看该U盘的文件系统格式"></a>2.查看该U盘的文件系统格式</h2><p>找到了U盘设备的名称后，我们急需知道该文件系统格式。接下来我们学习这个shell命令来查询U盘设备的文件系统格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo fdisk -l /dev/sdb</span><br></pre></td></tr></table></figure><p>通过以下截图，我们可以看到目标设备——“/dev/sdb1”的文件系统格式是“NTFS”：</p><img src="/post/3c503eab/file_system_format.png" title="U盘的文件系统格式"><h2 id="3-修复U盘上莫名的错误"><a href="#3-修复U盘上莫名的错误" class="headerlink" title="3.修复U盘上莫名的错误"></a>3.修复U盘上莫名的错误</h2><p>现在我们知道了U盘的设备名称和文件格式系统，理论上可以进行手动的挂载U盘了。不过，不要忘了，我这个U盘貌似有莫名的分区格式错误。所以我们先学习修复U盘上分区格式错误的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ntfsfix /dev/sdb1</span><br></pre></td></tr></table></figure><h2 id="4-创建挂载点并完成手动挂载"><a href="#4-创建挂载点并完成手动挂载" class="headerlink" title="4.创建挂载点并完成手动挂载"></a>4.创建挂载点并完成手动挂载</h2><p>修复了U盘的分区格式错误后，我们学习手动挂载U盘设备。通过学习以下挂载命令，我们可以知道，除了知道目标设备文件的文件系统格式、目标设备名称外，我们还需要一个可以挂载目标设备的挂载点目录，通常我们将这个挂载点目录创建在——”/media”下。（通过修复U盘后，再次插入U盘自动挂载后，我们可以查看到Ubuntu自动挂载的挂载点目录在——”/media/user/下，所以我们可以确定Linux都在“/media”下挂载设备。）这里我们创建的挂载点目录是“/media/usb”。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mount -t ntfs /dev/sdb1 /media/usb</span><br></pre></td></tr></table></figure><img src="/post/3c503eab/mount.png" title="手动挂载U盘并检查是否挂载成功"><img src="/post/3c503eab/auto-mount.png" title="系统自动挂载U盘后查看挂载点目录"><h2 id="5-卸载设备"><a href="#5-卸载设备" class="headerlink" title="5.卸载设备"></a>5.卸载设备</h2><p>接下来我们学习手动卸载U盘的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo umount /media/usb</span><br></pre></td></tr></table></figure><img src="/post/3c503eab/umount.png" title="卸载目标设备后检查是否卸载成功"><p>挂载成功后的挂载点目录显示为绿色背景，卸载成功后的目录显示为无色背景。</p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>这次的学习之旅暂告一个段落。搭建好这个博客后，就要多学习多写文章了。不写不知道自己的语言组织能力是多么的匮乏。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Ubuntu下手动挂载NTFS格式的U盘&quot;&gt;&lt;a href=&quot;#Ubuntu下手动挂载NTFS格式的U盘&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu下手动挂载NTFS格式的U盘&quot;&gt;&lt;/a&gt;Ubuntu下手动挂载NTFS格式的U盘&lt;/h1&gt;&lt;p&gt;我们都知道，在Linux下使用U盘、硬盘等移动设备时，需要手动挂载这些设备。现在的很多Linux桌面发行版本，如我使用的Ubuntu 18在检测到有移动设备插入时，将会自动完成挂载该设备。但凡事都会有意外，今天我插入的U盘居然有莫名的错误（我猜测可能是未正确卸载导致的），这时候我可怜的Ubuntu兄弟就没能自动挂载了。&lt;/p&gt;
&lt;p&gt;有需求就要学习新知识，这不我赶紧趁着这样的机会学习下，手动挂载移动设备。&lt;/p&gt;
&lt;p&gt;我们先来理一下，达成目标的学习思路：&lt;/p&gt;
&lt;p&gt;1.查看插入U盘在系统下分配的设备名称&lt;/p&gt;
&lt;p&gt;2.查看该U盘的文件存储格式&lt;/p&gt;
&lt;p&gt;3.修复U盘上莫名的错误&lt;/p&gt;
&lt;p&gt;4.创建挂载点并完成手动挂载&lt;/p&gt;
&lt;p&gt;5.卸载设备&lt;/p&gt;
    
    </summary>
    
      <category term="学习" scheme="https://panyang.online/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Linux" scheme="https://panyang.online/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://panyang.online/tags/Ubuntu/"/>
    
      <category term="mount" scheme="https://panyang.online/tags/mount/"/>
    
      <category term="umount" scheme="https://panyang.online/tags/umount/"/>
    
      <category term="NTFS" scheme="https://panyang.online/tags/NTFS/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://panyang.online/post/4a17b156.html"/>
    <id>https://panyang.online/post/4a17b156.html</id>
    <published>2019-04-10T13:52:12.000Z</published>
    <updated>2019-04-15T01:07:27.788Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
